name: Build Base Images

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: "0 6/12 * * *" # 6am & 6pm every day
  workflow_dispatch:

env:
  IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}

jobs:
  build-base:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        build:
          - os: ubuntu
            version: 22.04
          - os: alpine
            version: 3.18
          - os: fedora
            version: 38
          - os: fedora
            version: 39
    permissions:
      contents: read
      packages: write
      id-token: write
    env:
      TAGS: ""
      TAGS_CONCAT: ""
      IMAGE_NAME: distrobox-images/base/${{ matrix.build.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4

      - name: Generate Image Metadata
        if: github.event_name != 'pull_request'
        shell: bash
        run: |
          TAGS=()

          TAGS+=("${IMAGE_REGISTRY}/${IMAGE_NAME}:${{ matrix.build.version }}")
          TAGS+=("${IMAGE_REGISTRY}/${IMAGE_NAME}:$(git rev-parse --short HEAD)-${{ matrix.build.version }}")

          echo "TAGS=${TAGS[*]}" >> $GITHUB_ENV
          echo "TAGS_CONCAT=$(IFS=, ; echo "${TAGS[*]}")" >> $GITHUB_ENV

      - name: Generate Image Metadata (Pull Request)
        if: github.event_name == 'pull_request'
        shell: bash
        run: |
          TAGS=()

          TAGS+=("${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}:pr${{ github.event.number }}-${{ matrix.build.version }}")
          TAGS+=("${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}:pr${{ github.event.number }}-$(git rev-parse --short HEAD)-${{ matrix.build.version }}")

          echo "TAGS=${TAGS[*]}" >> $GITHUB_ENV
          echo "TAGS_CONCAT=$(IFS=, ; echo "${TAGS[*]}")" >> $GITHUB_ENV

      - name: Login to GHCR
        uses: docker/login-action@0d4c9c5ea7693da7b068278f7b52bda2a190a446 # v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@4fd812986e6c8c2a69e18311145f9371337f27d4 # v3

      - name: Build Image
        id: build
        uses: docker/build-push-action@a254f8ca60a858f3136a2f1f23a60969f2c402dd # v6
        with:
          context: base/${{ matrix.build.os }}/${{ matrix.build.version }}
          file: base/${{ matrix.build.os }}/${{ matrix.build.version }}/Containerfile
          push: true
          tags: ${{ env.TAGS_CONCAT }}
